// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureWebapp
{
    [AzureWebappResourceType("azurewebapp:index:AzureWebApp")]
    public partial class AzureWebApp : Pulumi.ComponentResource
    {
        /// <summary>
        /// The website URL.
        /// </summary>
        [Output("websiteUrl")]
        public Output<string> WebsiteUrl { get; private set; } = null!;


        /// <summary>
        /// Create a AzureWebApp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzureWebApp(string name, AzureWebAppArgs args, ComponentResourceOptions? options = null)
            : base("azurewebapp:index:AzureWebApp", name, args ?? new AzureWebAppArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class AzureWebAppArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Id of app service plan to add web app to
        /// </summary>
        [Input("appServicePlanId")]
        public Input<string>? AppServicePlanId { get; set; }

        /// <summary>
        /// Path to dockerfile for app
        /// </summary>
        [Input("pathToDockerfile", required: true)]
        public Input<string> PathToDockerfile { get; set; } = null!;

        /// <summary>
        /// Resource group to place resources in
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Port that container is running on
        /// </summary>
        [Input("websitePort", required: true)]
        public Input<int> WebsitePort { get; set; } = null!;

        public AzureWebAppArgs()
        {
        }
    }
}
